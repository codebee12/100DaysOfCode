Reference: https://aws.amazon.com/message-queue/

A message queue is a form of asynchronous service-to-service communication used in serverless and microservices architectures.
Messages are stored on the queue until they are processed and deleted. 
Each message is processed only once, by a single consumer. 
Message queues can be used to decouple heavyweight processing, to buffer or batch work, and to smooth spiky workloads.

In modern cloud architecture, applications are decoupled into smaller, independent building blocks that are easier to develop, 
deploy and maintain. Message queues provide communication and coordination for these distributed applications.
Message queues can significantly simplify coding of decoupled applications, while improving performance, reliability and scalability.

Message queues allow different parts of a system to communicate and process operations asynchronously. 
A message queue provides a lightweight buffer which temporarily stores messages, and endpoints that allow software 
components to connect to the queue in order to send and receive messages. 
The messages are usually small, and can be things like requests, replies, error messages, or just plain information. 
To send a message, a component called a producer adds a message to the queue. 
The message is stored on the queue until another component called a consumer retrieves the message and does something with it.